<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <context:annotation-config/>

  <!-- Spring + MyBatis + HikariCP -->
  <!-- Hikari Datasource -->
  <bean id="dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    <!-- <property name="driverClassName" value="${db.driverClass}" /> --> <!-- 无需指定，除非系统无法自动识别 -->
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 连接只读数据库时配置为true，保证安全 -->
    <property name="readOnly" value="false" />
    <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException，缺省:30秒 -->
    <property name="connectionTimeout" value="30000" />
    <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
    <property name="idleTimeout" value="600000" />
    <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
    <property name="maxLifetime" value="1800000" />
    <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
    <property name="maximumPoolSize" value="15" />
  </bean>

  <bean id="sqlSessionFactory" class="com.domain.common.framework.spring.ExtSqlSessionFactoryBean">
    <property name="dataSource" ref="dataSourceHikari"/>
    <property name="mapperLocations" value="classpath*:com/domain/java/dao/base/*/*.xml"/>
    <property name="extPackages" value="com.domain.java.dao.base.ext"/>
  </bean>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSourceHikari"/>
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean id="read_dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    <!-- <property name="driverClassName" value="${db.driverClass}" /> --> <!-- 无需指定，除非系统无法自动识别 -->
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 连接只读数据库时配置为true，保证安全 -->
    <property name="readOnly" value="true" />
    <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException，缺省:30秒 -->
    <property name="connectionTimeout" value="30000" />
    <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
    <property name="idleTimeout" value="600000" />
    <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
    <property name="maxLifetime" value="1800000" />
    <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
    <property name="maximumPoolSize" value="15" />
  </bean>

  <bean id="read_sqlSessionFactory" class="com.domain.common.framework.spring.ExtSqlSessionFactoryBean">
    <property name="dataSource" ref="read_dataSourceHikari"/>
    <property name="mapperLocations" value="classpath*:com/domain/java/dao/base/*/*.xml"/>
    <property name="extPackages" value="com.domain.java.dao.base.ext"/>
  </bean>

  <bean id="read_transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="read_dataSourceHikari"/>
  </bean>
  <tx:annotation-driven transaction-manager="read_transactionManager"/>

  <bean class="com.domain.common.framework.spring.ProxyMapperScannerConfigurer">
    <property name="basePackage" value="com.domain.java.dao.base.ext"/>
    <property name="writeSqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    <property name="readSqlSessionFactoryBeanName" value="read_sqlSessionFactory"/>
    <property name="writePatterns" value="update,delete,insert,save,modify,del"/>
    <property name="readPatterns" value="select,get,count,query"/>
  </bean>

</beans>